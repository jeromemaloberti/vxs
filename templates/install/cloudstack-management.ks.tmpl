# Kickstart file automatically generated by anaconda.

#version=DEVEL
install
url --url=http://www.mirrorservice.org/sites/mirror.centos.org/6.5/os/x86_64/
lang en_US.UTF-8
keyboard us
network --onboot yes --device eth0 --bootproto dhcp --noipv6
network --onboot yes --device eth1 --bootproto static --nodns --ip=192.168.1.1 --netmask=255.255.255.0 --nodefroute --hostname=srvr1.cloud.priv --noipv6
rootpw  --iscrypted $6$/QIiNFbHPRjTKPwS$iqyED5PQbbcvVY2UvI4QgYTt75oWPhESiWR0kCoKdO9ddIJ9W/yqqPcRFGCyy4lhCUc73xe4I9n6/WjeV0b4t1
firewall --service=ssh
authconfig --enableshadow --passalgo=sha512
selinux --permissive
timezone --utc Europe/London
bootloader --location=mbr --driveorder=xvda --append="crashkernel=auto console=hvc0 rhgb quiet"
zerombr
# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work
clearpart --linux --drives=xvda
part / --fstype=ext4 --grow --size=1024
part swap --size=2016 --maxsize=2016
part /boot --fstype=ext4 --size=500


repo --name="CentOS"  --baseurl=http://www.mirrorservice.org/sites/mirror.centos.org/6.5/os/x86_64/ --cost=100

repo --name="Cloudstack" --baseurl=http://cloudstack.apt-get.eu/rhel/4.2/ --cost 100 

services --enabled rpcbind,nfs,mysqld,ntpd

shutdown

%packages --nobase
@core
ntp
nfs-utils
mysql-server
cloud-client
dnsmasq
%end

%post
# Post installation script

exec > /root/ks-post-anaconda.log 2>&1

# Enable IP forwarding

grep -v net.ipv4.ip_forward /etc/sysctl.conf > /tmp/sysctl.conf
mv /tmp/sysctl.conf /etc/
echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf

cat >>/etc/sysconfig/nfs <<EOF
LOCKD_TCPPORT=32803
LOCKD_UDPPORT=32769
MOUNTD_PORT=892
RQUOTAD_PORT=875
STATD_PORT=662
STATD_OUTGOING_PORT=2020
EOF

cat > /etc/dnsmasq.conf << EOF
interface=eth1
except-interface=lo
listen-address=192.168.1.1
bind-interfaces
dhcp-range=192.168.1.151,192.168.1.150,255.255.255.0,12h
dhcp-host=02:00:00:00:00:01,vxs1,192.168.1.2
dhcp-host=02:00:00:00:00:02,vxs2,192.168.1.3
dhcp-host=02:00:00:00:00:03,vxs3,192.168.1.4
EOF

echo "Domain = cloud.priv" >> /etc/idmapd.conf
echo "192.168.1.1 srvr1.cloud.priv" >> /etc/hosts

cat >/etc/exports <<EOF
/secondary *(rw,async,no_root_squash)
/primary   *(rw,async,no_root_squash)
EOF

mkdir /primary /secondary

service mysqld start

cloudstack-setup-databases cloud:cloud@localhost --deploy-as=root
cloudstack-setup-management
/usr/share/cloudstack-common/scripts/storage/secondary/cloud-install-sys-tmplt -m /secondary -u http://d21ifhcun6b1t2.cloudfront.net/templates/4.2/systemvmtemplate-2013-07-12-master-xen.vhd.bz2 -h xenserver -F
wget http://download.cloud.com.s3.amazonaws.com/tools/vhd-util
chmod 755 vhd-util
mv vhd-util /usr/share/cloudstack-common/scripts/vm/hypervisor/xenserver


chkconfig dnsmasq on


cat > /etc/sysconfig/iptables.cs <<EOF
# Firewall configuration written by system-config-firewall
# Manual customization of this file is not recommended.
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -s 192.168.1.0/24 -m state --state NEW -p udp --dport 111 -j ACCEPT
-A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 111 -j ACCEPT
-A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 2049 -j ACCEPT
-A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 32803 -j ACCEPT
-A INPUT -s 192.168.1.0/24 -m state --state NEW -p udp --dport 32769 -j ACCEPT
-A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 892 -j ACCEPT
-A INPUT -s 192.168.1.0/24 -m state --state NEW -p udp --dport 892 -j ACCEPT
-A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 875 -j ACCEPT
-A INPUT -s 192.168.1.0/24 -m state --state NEW -p udp --dport 875 -j ACCEPT
-A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 662 -j ACCEPT
-A INPUT -s 192.168.1.0/24 -m state --state NEW -p udp --dport 662 -j ACCEPT
-A INPUT -p tcp --dport 8080 -j ACCEPT
-A INPUT -i eth1 -p tcp -m tcp --dport 67 -j ACCEPT
-A INPUT -i eth1 -p udp -m udp --dport 67 -j ACCEPT
-A INPUT -i eth1 -p tcp -m tcp --dport 53 -j ACCEPT
-A INPUT -i eth1 -p udp -m udp --dport 53 -j ACCEPT
-A FORWARD -i eth1 -o eth0 -j ACCEPT
-A FORWARD -i eth0 -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT
*nat
:PREROUTING ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A POSTROUTING -s 192.168.1.0/24 -j MASQUERADE
COMMIT
EOF

cat > /etc/init.d/firstboot <<EOF
#!/bin/bash
# chkconfig: 2345 01 99
# description: Puts our iptables rules in and removes persistent net rules

if [ -e /etc/sysconfig/iptables.cs ]; then
  mv /etc/sysconfig/iptables.cs /etc/sysconfig/iptables
fi

grep -v HWADDR /etc/sysconfig/network-scripts/ifcfg-eth0 > /tmp/ifcfg-eth0
grep -v UUID /tmp/ifcfg-eth0 > /etc/sysconfig/network-scripts/ifcfg-eth0
grep -v HWADDR /etc/sysconfig/network-scripts/ifcfg-eth1 > /tmp/ifcfg-eth1
grep -v UUID /tmp/ifcfg-eth1 > /etc/sysconfig/network-scripts/ifcfg-eth1

EOF

chmod 755 /etc/init.d/firstboot
chkconfig --add firstboot

# Install the guest agent from the tools ISO

mount /dev/xvdd /mnt
/mnt/Linux/install.sh -n
umount /mnt

# Let's not worry about MACs:

rm -f /etc/udev/rules.d/70-persistent-net.rules


%end

